{/*todo:- fixed bugs in this version:	- when checking "create subfolders" and also using the compName, the folders had marker-names	- fixed some integer problem when creating folders*//*DatRenderQCopyright (c) 2015 Fynn Lauehttp://fynnlaue.comMany thanks to :Dan Ebberts. For having answers to almost everything on the Forums.Michel Pensas for writing the "Export to Bytes" script on AEscripts.com. Without it this script wouldn't have a fancy header image.Kim Groth, Mads Hagbarth, Kaddi Mader for testing.	LICENSE:    "Markers To Render Queue" is free software: you can redistribute it and/or modify    it under the terms of the GNU General Public License as published by    the Free Software Foundation, either version 3 of the License, or    (at your option) any later version.    Markers To Render Queue is distributed in the hope that it will be useful,    but WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    GNU General Public License for more details.    To see the GNU General Public License, go to <http://www.gnu.org/licenses/>.*//////////////////////////////////////////////////////////////////////////////////////////////////	BASIC CHECKINGS//	basic global variables needed throughout the script///////////////////////////////////////////////////////////////////////////////////////////////var projectFile = '';var projectName = '';var projectDir = '';//variables used in the logFilevar scriptV = '0.8b2';var os = [system.osName,system.osVersion]var AEinfo = [app.isoLanguage,app.version,app.buildName,app.buildNumber]//////////////////////////////////////                                ////                                ////    ##      ######  ######      ////    ##      ##  ##  ##          ////    ##      ##  ##  ##          ////    ##      ##  ##  ## ###      ////    ##      ##  ##  ##  ##      ////    ######  ######  ######      ////                                ////                                //////////////////////////////////////////  Stores assorted info for easer debugging////////////////////////////////////////////////////////////////////////////  LOGFILE-- everything is stored in this arrayvar logFile = ['LOGFILE\r',	'OS: '+os[0]+' v'+os[1],	'AE info: ',	'	isoLanguage: '+AEinfo[0],	'	version: '+AEinfo[1],	'	build name: '+AEinfo[2],	'	build number: '+AEinfo[3],	'DatRenderQ info:',	'	Script Version: '+scriptV,	'Other Info: ']//  Neccessary function to update projectName and projectDir info inside logFile-arrayfunction updateProjInf(){	logFile[10] = ('	projectName: '+projectName);	logFile[11] = ('	projectDir: '+projectDir);}//  Convert the logFile array to a printable multiline stringfunction faxLog(logFile){	fax = ''	for(i=0;i<logFile.length;i++){		fax = fax+logFile[i]+'\r'	}	fax = fax+'\r\rend of LOGFILE'	return fax}//  LogWindow - Gets displayed if main window fails to drawfunction logWindow(){	//make a window	var hWin = new Window("palette", "DatRenderQ - ERROR", undefined,{borderless:true}, {resizable:false})	//CONTENTS:	var res =		"group {orientation:'column',alignChildren:['center','top'],spacing:5,\			header:Group{ orientation:'row', alignChildren:['center','top'],spacing:5,\				head: StaticText{text:'heading'}\				subHead: StaticText{text:'subHead'}\			}\			descrGrp:Group{orientation:'column',alignChildren:['center','top'],spacing:3,\				descr: StaticText{characters:'40',properties:{multiline:true}}\			}\			log: EditText{text:'',alignment:['center','top'],characters:30,properties:{multiline:true}}\			closeBtn: Button{text:'close'}\		}"	hWing = hWin.add(res);		//	function options(gui){		//SIZES:		var wSize = [0,0,310,160];		//--HEADING--		var heading = gui.header.head			heading.text = 'DatRenderQ';			heading.font = ScriptUI.newFont("Arial","REGULAR",9);		var subHead = gui.header.subHead			subHead.text = scriptV;		//--Error Description-- //for the confused users		//gui.descr.bounds = [0,0,wSize[2],30];		gui.descrGrp.descr.text = "Something went wrong during window-drawing.\rPlease copy the log beneath and send it to:"		gui.descrGrp.add('statictext',undefined,"fynnay[at]gmail.com");		//--LOG--		var datLog = gui.log			datLog.bounds = wSize			datLog.text = faxLog(logFile)		//--FOOTER--		gui.closeBtn.onClick = function(){gui.parent.close()}	}	options(hWing); //call with window and resource string as input	function showUI(gui){ //load GUI (window with added res string) and show it		if (gui !=null && gui instanceof Window){			gui.show();			gui.center();		}else{			alert("something went wrong...\rIf You see this error, tell Fynn that the error Log window isn\'t working.")		}	}	showUI(hWin);}//////////////////////////////////////////////////////////////--LOG--///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////  Update the projectName and projectDir variables, that are used throughout the scriptfunction getProjectInfo(){	projectFile = app.project.file!=null?app.project.file:false;	if(projectFile!=false){		projectName = File.decode(app.project.file.name);		projectDir = projectFile.fsName.slice(0,projectFile.fsName.length-projectName.length);		updateProjInf()		return true;	}else{		projectName = 'Untitled Project';		projectDir = 'Undefined Path';		updateProjInf()		return false;	}}getProjectInfo();//  Update the prefs variable, which is very important for the script to be able to create subfoldersvar prefs;function getPrefs(){	prefs;	function fetch(){		try{			prefs = app.preferences.getPrefAsString("Main Pref Section v2","Pref_SCRIPTING_FILE_NETWORK_SECURITY");		}catch(err){			prefs = false;			alert("couldn't get preferences.\r Enjoy the interface. Clicking the 'RUN' button will annoy the shit out of you though.")		}		return prefs	}fetch()	logFile[12] = ('	prefs: '+prefs)}getPrefs()///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////  RENDER OUTPUT SETTINGS//		- these are used throughout the script an should therefore be defined here.//			- this ensures that they aren't reset while the script is run or when the user opens another project./////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////var renderQ = app.project.renderQueue;var renderLoc;var renderMarkers = []; //contains marker's position and comment textvar outputModuleT = '';var renderSingleFrame = false;///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	GLOBALLY USED FUNCTIONS//		- the AddRenderItems (defined later) function calls the following functions if certain settings apply/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////function counter(loopcount){ //used to append integers to file names etc.	var counter;	if(loopcount<9){		counter = '0'+(loopcount+1);	}else{		counter = loopcount+1;	} return counter}// Set the output path to a custom location.function setDefaultOutput(){	var fold = new Folder(projectDir+'/'+'renders');	if (fold.exists==false){		writeLn('making new render folder next to project File');		fold.create();	}	return fold.fsName;//if the project has been saved a default folder can be created next to it}// Set the output path to a location next to the After Effects Project file. Only possible if the project is saved.function setCustomOutput(){	var renderLoc = new Folder(Folder.selectDialog("Select a render output folder..."));	if (renderLoc!='/null'){		return renderLoc.fsName;	}else{return false};//the user specifies an output folder via pop up dialog or pasting a path in the text field}//	Lot's of checking directories and incrementing numbers, so nothing gets overwritten.function createSubDir(parentDir,subName){	var renderLoc = parentDir;	writeLn('creating subfolders');	if(renderLoc!='/null'){		var nName = ''; //contains the conplete string for the new folder		var firstName = ''; //contains the main name (marker or comp) for the new folder		var x = 0;		if(subName==''){			firstName = thisComp.name;		}else{			firstName=subName;		}		nName = firstName+'_'+counter(x);		var fold = new Folder (renderLoc+'/'+nName);		while(fold.exists==true){			nName = firstName+'_'+counter(x);			fold = new Folder (renderLoc+'/'+nName);			x++;		}		if(fold.exists==false){			fold.create(); //create new folder, if it doesn't exist yet		}	}	return fold.fsName;//the user can choose to create a new folder for each render item}/////////////////////////////////////////////////////////////////////////////////////////////////	RENDER QUEUE SETTINGS//	render queue settings///////////////////////////////////////////////////////////////////////////////////////////////function clearRenderQ(){	while (renderQ.numItems>0){		renderQ.item(renderQ.numItems).remove()	}//clears Render Queue}/////////////////////////////////////////////////////////////////////////////////////////////////	PSEUDO TIMELINE//		- creates temporary text object with an expression, so the stupid script language can read the comp markers///////////////////////////////////////////////////////////////////////////////////////////////function pseudoTimeline(exprNo){	//expression for "source text" property of text layer (temp null):	var thisComp = app.project.activeItem;	var markerExpression1 = """//all markers (visible in comp)var contents = "";mTime = "";for(i=1;i<=thisComp.marker.numKeys;i++){	var mTime = thisComp.marker.key(i).time;	var mComment = thisComp.marker.key(i).comment;	var ctStart = thisComp.displayStartTime;	var ctEnd = thisComp.duration;	var another = contents+mComment+"#"+mTime+"/"	if(mTime==ctStart){ //if marker is on first frame		contents = another;	}else if(mTime>ctStart && mTime<ctEnd){ //if marker is between comp start/end time		contents = another;	}else if(mTime==ctEnd){ //if marker is on last frame		contents = another;	}}"/"+contents"""	var markerExpression2 = """//Only markers inside work areavar contents = "";mTime = "";for(i=1;i<=thisComp.marker.numKeys;i++){	var mTime = thisComp.marker.key(i).time;	var mComment = thisComp.marker.key(i).comment;	var waStart = thisLayer.inPoint;	var waEnd = thisLayer.outPoint;	var another = contents+mComment+"#"+mTime+"/"	if(mTime==waStart){ //if marker is on first frame of workarea		contents = another;	}else if(mTime>waStart && mTime<waEnd){ //if marker is between work area start/end time		contents = another;	}else if(mTime==waEnd){ //if marker is on last frame of workarea		contents = another;	}}"/"+contents"""	var markerExpression3 = """//Only markers outside work areavar contents = "";mTime = "";for(i=1;i<=thisComp.marker.numKeys;i++){	var mTime = thisComp.marker.key(i).time;	var mComment = thisComp.marker.key(i).comment;	var ctStart = thisComp.displayStartTime;	var ctEnd = thisComp.duration;	var waStart = thisLayer.inPoint;	var waEnd = thisLayer.outPoint;	var another = contents+mComment+"#"+mTime+"/"	if(mTime==ctStart){ //if marker is on first frame of comp		contents = another;	}else if(mTime>ctStart && mTime<waStart){ //if marker is between comp start and work area start time		contents = another;	}else if(mTime>waEnd && mTime<ctEnd){ // if marker is between work area end and comp end		contents = another;	}else if(mTime==waEnd){ //if marker is on last frame of comp		contents = another;	}}"/"+contents"""	var tempNull = thisComp.layers.addText();		tempNull.name = "#MARKER_INFO";		//add the magic words		if(exprNo==1){			tempNull.property("Source Text").expression = markerExpression1;		}else if(exprNo==2){			tempNull.inPoint = thisComp.workAreaStart;			tempNull.outPoint = thisComp.workAreaDuration+thisComp.workAreaStart;			tempNull.property("Source Text").expression = markerExpression2;		}else if(exprNo==3){			tempNull.inPoint = thisComp.workAreaStart;			tempNull.outPoint = thisComp.workAreaDuration+thisComp.workAreaStart;			tempNull.property("Source Text").expression = markerExpression3;		}		tempNull.property("Source Text").value.justification = ParagraphJustification.LEFT_JUSTIFY;		tempNull.guideLayer = true;		tempNull.shy = true;		tempNull.duration = thisComp.length;		tempNull.enabled = false;		tempNull.moveToBeginning();		tempNull.selected = false;		tempNull.locked = false;	var markerInfo = tempNull.property("Source Text").value.toString();}/////////////////////////////////////////////////////////////////////////////////////////////////	HOUSEKEEPING//		- Reads pseudoTimeline's contents and put's values in an array (that way the script can read them easily)///////////////////////////////////////////////////////////////////////////////////////////////function housekeeping(){ 	var thisComp = app.project.activeItem;	var hashes = [];	var slashes = [];	var tempNull = thisComp.layer(1);	var markerInfo = tempNull.property("Source Text").value.toString();	for(i=0;i<markerInfo.length;i++){		var curL = markerInfo.slice(i,i+1);		if(curL=="#"){			hashes.push(i);		}		if(curL=="/"){			slashes.push(i);		}	}	// create markers:	for(i=0;i<hashes.length;i++){		var hashCheck = hashes[i];		var slashCheck = slashes[i];		var markerName = markerInfo.slice(slashCheck+1,hashCheck);		var markerPos = markerInfo.slice(hashCheck+1,slashes[i+1]);		var Lmarker = new MarkerValue(markerName);		tempNull.property("Marker").setValueAtTime(markerPos, Lmarker);	//dis make marker!		renderMarkers.push([markerPos,markerName]);	}//reads text layer's contents and creates markers on null object (that way the script can understand them)}//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////                                                                                                                                        ////      ######  #####    #####        #####    ######  ##   ##  #####    ######  #####        ##  ######  ######  ##     ##  #######      ////      ##  ##  ##   ##  ##   ##      ##   ##  ##      ###  ##  ##   ##  ##      ##   ##      ##    ##    ##      ###   ###  ##           ////      ##  ##  ##   ##  ##   ##      ##   ##  ##      #### ##  ##   ##  ##      ##   ##      ##    ##    ##      ## ### ##  ##           ////      ##  ##  ##   ##  ##   ##      ## ##    #####   ## ####  ##   ##  #####   ## ##        ##    ##    #####   ##  #  ##    ####       ////      ######  ##   ##  ##   ##      #####    ##      ##  ###  ##   ##  ##      #####        ##    ##    ##      ##     ##       ##      ////      ##  ##  ##   ##  ##   ##      ##  ##   ##      ##   ##  ##   ##  ##      ##  ##       ##    ##    ##      ##     ##       ##      ////      ##  ##  #####    #####        ##   ##  ######  ##   ##  #####    ######  ##   ##      ##    ##    ######  ##     ##  #######      ////                                                                                                                                        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	ADD RENDER ITEMS//		- reads every entry of the renderMarkers array...//		- ...and adds a new render item with the settings read directly from the UI values///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////function addRenderItems(name,append,output,fileNom){//this is where the magic happens	thisComp = app.project.activeItem;	renderQ = app.project.renderQueue;	function appendFrames(){		var appendF = '[';		var checkLen = (thisComp.duration*thisComp.frameRate).toString().length;		for(f=0;f<checkLen;f++){			appendF = appendF+'#';		}		appendF = appendF+']';		return appendF;	}	var renderQlen = renderQ.numItems;	for(i=0;i<renderMarkers.length;i++){		var thisMarker = renderMarkers[i];		var nextMarker = thisComp.duration;			if(renderMarkers[i+1] != undefined){				nextMarker = renderMarkers[i+1][0];			}else{nextMarker = thisComp.duration;}		var markerTime = thisMarker[0];		var markerName = thisMarker[1];		var duration;			duration = nextMarker-markerTime;		renderQ.items.add(thisComp); //add render item to render Queue			var curItem = renderQ.item(renderQlen+i+1);			var curRenderItem = renderQ.item(renderQ.numItems);			curItem.timeSpanStart = thisMarker[0];			if(renderSingleFrame==true){				curItem.timeSpanDuration = thisComp.frameDuration;			}else{					app.beginSuppressDialogs(); //stop AE from displaying errors to avoid the out of range error					curItem.timeSpanDuration = duration;					app.endSuppressDialogs(false); //let AE display errors again, but don't display previously occured ones			}			var outputName;			//check what File Name user has chosen. If marker is empty, use comp name and a counter.			if(fileNom==thisComp.name){				outputName = thisComp.name+'_'+counter(i);			}else{				if (markerName!=''){					//check if the name already exists in the render queue/previous markers and increment counter accordingly					var count = 0;					for (c=0;c<i;c++){						var name = renderMarkers[c][1]						if (name==markerName){							count++						}					}					outputName = markerName+'_'+counter(count); //count only increments if name already exists in previous markers. Starts at 001.				}else{					outputName = thisComp.name+'_'+counter(i);				}			}	////////////////////			var appendF = append==true?appendFrames():'';			var outputPath;				if(append!=true){					outputPath=output;				}else{					if(fileNom==thisComp.name){						var makeSubDir = createSubDir(output,fileNom);						}else{						var makeSubDir = createSubDir(output,markerName);					}					outputPath=makeSubDir;				};			var newPath = outputPath+'/'+outputName+appendF;			var curOM = curRenderItem.outputModule(1);			curOM.file = new File(newPath);			curOM.applyTemplate(outputModuleT);	}	}////////////////////////////////////////////										////										////			######	##	##	##			////			##		##	##	##			////			## ##	##	##	##			//	- GUI, duh!//			##	##	##	##	##			////			######	######	##			////										////										////////////////////////////////////////////function userInterface(thisObj){	var thisComp = app.project.activeItem;	function build_ui(thisObj){		if(thisObj instanceof Panel){			var myPanel = thisObj;		}else{			var myPanel = (thisObj instanceof Panel)? thisObj : new Window("palette", "RenderQ", undefined, {resizable:true});		}		var res =		"group {orientation:'column',alignChildren:['fill','fill'],\			rndrStngsPnl: Panel{ orientation:'column', minimumSize:[100,10], alignChildren:['left','top'],\				text: 'Render...', \				useMrks: RadioButton{text:'Comp Markers',value:'true'},\				stillFrm: Checkbox{text:'Still',value:false}\			}\			outputPnl: Panel { orientation:'column', alignChildren:['left', 'top']\				text: 'Render Location', \				defOut: Group{orientation:'row',alignChildren:['left','top'],\					defOutBtn: RadioButton{text:'use default',value:'true'},\					defOutPth: StaticText{text:'~/Project/renders/'}\				},\				cstmOut: Group{orientation:'row',alignChildren:['left','bottom'],\					cstmOutBtn: RadioButton{text:'use custom'},\					setCstmOut: Button{text:'choose location'}\				}\				cstmPth: EditText{characters:35,justify:'left'} \			}\			outputModPnl: Panel{orientation:'column',alignChildren:['left','top']\				text: 'Output Module',\				outputModMenu: DropDownList{bounds:[left,top,150,10],name:'output module'},\			} \			fileNomPnl: Panel{orientation:'column',alignChildren:['left','top']\				text:'File Name', \				useMrkNom: RadioButton{text:'Use comment from Markers',value:'true'},\				useCompNom: RadioButton{text:'Use name from Comp+counter'},\				addFrmNo: Checkbox{text:'Create subfolders'},\			} \			footer: Group {orientation:'row',alignChildren:['center','center']\				okBtn: Button{text:'RUN!',name:'run'}\			}\		}";		//////////////////////////////////////////		//                                      //		//                                      //		//    ##      ######  ######  ######    //		//    ##      ##  ##  ##      ##  ##    //		//    ##      ##  ##  ##      ##  ##    //	- image		//    ##      ##  ##  ## ##   ##  ##    //		//    ##      ##  ##  ##  ##  ##  ##    //		//    ######  ######  ######  ######    //		//                                      //		//                                      //		//////////////////////////////////////////		var header = myPanel.add('group',)			header.alignChilden = ['right','top'];			header.orientation = 'row';			//create temporary image file			var logoBinary = ["\u0089PNG\r\n\x1A\n\x00\x00\x00\rIHDR\x00\x00\x00\u00B4\x00\x00\x00\x18\b\x06\x00\x00\x00S\x13\u00D7\u00A7\x00\x00\x00\tpHYs\x00\x00\x16%\x00\x00\x16%\x01IR$\u00F0\x00\x00\nOiCCPPhotoshop ICC profile\x00\x00x\u00DA\u009DSgTS\u00E9\x16=\u00F7\u00DE\u00F4BK\u0088\u0080\u0094KoR\x15\b RB\u008B\u0080\x14\u0091&*!\t\x10J\u0088!\u00A1\u00D9\x15Q\u00C1\x11EE\x04\x1B\u00C8\u00A0\u0088\x03\u008E\u008E\u0080\u008C\x15Q,\f\u008A\n\u00D8\x07\u00E4!\u00A2\u008E\u0083\u00A3\u0088\u008A\u00CA\u00FB\u00E1{\u00A3k\u00D6\u00BC\u00F7\u00E6\u00CD\u00FE\u00B5\u00D7>\u00E7\u00AC\u00F3\u009D\u00B3\u00CF\x07\u00C0\b\f\u0096H3Q5\u0080\f\u00A9B\x1E\x11\u00E0\u0083\u00C7\u00C4\u00C6\u00E1\u00E4.@\u0081\n$p\x00\x10\b\u00B3d!s\u00FD#\x01\x00\u00F8~<<+\"\u00C0\x07\u00BE\x00\x01x\u00D3\x0B\b\x00\u00C0M\u009B\u00C00\x1C\u0087\u00FF\x0F\u00EAB\u0099\\\x01\u0080\u0084\x01\u00C0t\u00918K\b\u0080\x14\x00@z\u008EB\u00A6\x00@F\x01\u0080\u009D\u0098&S\x00\u00A0\x04\x00`\u00CBcb\u00E3\x00P-\x00`'\x7F\u00E6\u00D3\x00\u0080\u009D\u00F8\u0099{\x01\x00[\u0094!\x15\x01\u00A0\u0091\x00 \x13e\u0088D\x00h;\x00\u00AC\u00CFV\u008AE\x00X0\x00\x14fK\u00C49\x00\u00D8-\x000IWfH\x00\u00B0\u00B7\x00\u00C0\u00CE\x10\x0B\u00B2\x00\b\f\x000Q\u0088\u0085)\x00\x04{\x00`\u00C8##x\x00\u0084\u0099\x00\x14F\u00F2W<\u00F1+\u00AE\x10\u00E7*\x00\x00x\u0099\u00B2<\u00B9$9E\u0081[\b-q\x07WW.\x1E(\u00CEI\x17+\x146a\x02a\u009A@.\u00C2y\u0099\x192\u00814\x0F\u00E0\u00F3\u00CC\x00\x00\u00A0\u0091\x15\x11\u00E0\u0083\u00F3\u00FDx\u00CE\x0E\u00AE\u00CE\u00CE6\u008E\u00B6\x0E_-\u00EA\u00BF\x06\u00FF\"bb\u00E3\u00FE\u00E5\u00CF\u00ABp@\x00\x00\u00E1t~\u00D1\u00FE,/\u00B3\x1A\u0080;\x06\u0080m\u00FE\u00A2%\u00EE\x04h^\x0B\u00A0u\u00F7\u008Bf\u00B2\x0F@\u00B5\x00\u00A0\u00E9\u00DAW\u00F3p\u00F8~<<E\u00A1\u0090\u00B9\u00D9\u00D9\u00E5\u00E4\u00E4\u00D8J\u00C4B[a\u00CAW}\u00FEg\u00C2_\u00C0W\u00FDl\u00F9~<\u00FC\u00F7\u00F5\u00E0\u00BE\u00E2$\u00812]\u0081G\x04\u00F8\u00E0\u00C2\u00CC\u00F4L\u00A5\x1C\u00CF\u0092\t\u0084b\u00DC\u00E6\u008FG\u00FC\u00B7\x0B\u00FF\u00FC\x1D\u00D3\"\u00C4Ib\u00B9X*\x14\u00E3Q\x12q\u008ED\u009A\u008C\u00F32\u00A5\"\u0089B\u0092)\u00C5%\u00D2\u00FFd\u00E2\u00DF,\u00FB\x03>\u00DF5\x00\u00B0j>\x01{\u0091-\u00A8]c\x03\u00F6K'\x10Xt\u00C0\u00E2\u00F7\x00\x00\u00F2\u00BBo\u00C1\u00D4(\b\x03\u0080h\u0083\u00E1\u00CFw\u00FF\u00EF?\u00FDG\u00A0%\x00\u0080fI\u0092q\x00\x00^D$.T\u00CA\u00B3?\u00C7\b\x00\x00D\u00A0\u0081*\u00B0A\x1B\u00F4\u00C1\x18,\u00C0\x06\x1C\u00C1\x05\u00DC\u00C1\x0B\u00FC`6\u0084B$\u00C4\u00C2B\x10B\nd\u0080\x1Cr`)\u00AC\u0082B(\u0086\u00CD\u00B0\x1D*`/\u00D4@\x1D4\u00C0Qh\u0086\u0093p\x0E.\u00C2U\u00B8\x0E=p\x0F\u00FAa\b\u009E\u00C1(\u00BC\u0081\t\x04A\u00C8\b\x13a!\u00DA\u0088\x01b\u008AX#\u008E\b\x17\u0099\u0085\u00F8!\u00C1H\x04\x12\u008B$ \u00C9\u0088\x14Q\"K\u00915H1R\u008AT UH\x1D\u00F2=r\x029\u0087\\F\u00BA\u0091;\u00C8\x002\u0082\u00FC\u0086\u00BCG1\u0094\u0081\u00B2Q=\u00D4\f\u00B5C\u00B9\u00A87\x1A\u0084F\u00A2\x0B\u00D0dt1\u009A\u008F\x16\u00A0\u009B\u00D0r\u00B4\x1A=\u008C6\u00A1\u00E7\u00D0\u00ABh\x0F\u00DA\u008F>C\u00C70\u00C0\u00E8\x18\x073\u00C4l0.\u00C6\u00C3B\u00B18,\t\u0093c\u00CB\u00B1\"\u00AC\f\u00AB\u00C6\x1A\u00B0V\u00AC\x03\u00BB\u0089\u00F5c\u00CF\u00B1w\x04\x12\u0081E\u00C0\t6\x04wB a\x1EAHXLXN\u00D8H\u00A8 \x1C$4\x11\u00DA\t7\t\x03\u0084Q\u00C2'\"\u0093\u00A8K\u00B4&\u00BA\x11\u00F9\u00C4\x18b21\u0087XH,#\u00D6\x12\u008F\x13/\x10{\u0088C\u00C47$\x12\u0089C2'\u00B9\u0090\x02I\u00B1\u00A4T\u00D2\x12\u00D2F\u00D2nR#\u00E9,\u00A9\u009B4H\x1A#\u0093\u00C9\u00DAdk\u00B2\x079\u0094, +\u00C8\u0085\u00E4\u009D\u00E4\u00C3\u00E43\u00E4\x1B\u00E4!\u00F2[\n\u009Db@q\u00A4\u00F8S\u00E2(R\u00CAjJ\x19\u00E5\x10\u00E54\u00E5\x06e\u00982AU\u00A3\u009AR\u00DD\u00A8\u00A1T\x115\u008FZB\u00AD\u00A1\u00B6R\u00AFQ\u0087\u00A8\x134u\u009A9\u00CD\u0083\x16IK\u00A5\u00AD\u00A2\u0095\u00D3\x1Ah\x17h\u00F7i\u00AF\u00E8t\u00BA\x11\u00DD\u0095\x1EN\u0097\u00D0W\u00D2\u00CB\u00E9G\u00E8\u0097\u00E8\x03\u00F4w\f\r\u0086\x15\u0083\u00C7\u0088g(\x19\u009B\x18\x07\x18g\x19w\x18\u00AF\u0098L\u00A6\x19\u00D3\u008B\x19\u00C7T071\u00EB\u0098\u00E7\u0099\x0F\u0099oUX*\u00B6*|\x15\u0091\u00CA\n\u0095J\u0095&\u0095\x1B*/T\u00A9\u00AA\u00A6\u00AA\u00DE\u00AA\x0BU\u00F3U\u00CBT\u008F\u00A9^S}\u00AEFU3S\u00E3\u00A9\t\u00D4\u0096\u00ABU\u00AA\u009DP\u00EBS\x1BSg\u00A9;\u00A8\u0087\u00AAg\u00A8oT?\u00A4~Y\u00FD\u0089\x06Y\u00C3L\u00C3OC\u00A4Q\u00A0\u00B1_\u00E3\u00BC\u00C6 \x0Bc\x19\u00B3x,!k\r\u00AB\u0086u\u00815\u00C4&\u00B1\u00CD\u00D9|v*\u00BB\u0098\u00FD\x1D\u00BB\u008B=\u00AA\u00A9\u00A19C3J3W\u00B3R\u00F3\u0094f?\x07\u00E3\u0098q\u00F8\u009CtN\t\u00E7(\u00A7\u0097\u00F3~\u008A\u00DE\x14\u00EF)\u00E2)\x1B\u00A64L\u00B91e\\k\u00AA\u0096\u0097\u0096X\u00ABH\u00ABQ\u00ABG\u00EB\u00BD6\u00AE\u00ED\u00A7\u009D\u00A6\u00BDE\u00BBY\u00FB\u0081\x0EA\u00C7J'\\'Gg\u008F\u00CE\x05\u009D\u00E7S\u00D9S\u00DD\u00A7\n\u00A7\x16M=:\u00F5\u00AE.\u00AAk\u00A5\x1B\u00A1\u00BBDw\u00BFn\u00A7\u00EE\u0098\u009E\u00BE^\u0080\u009ELo\u00A7\u00DEy\u00BD\u00E7\u00FA\x1C}/\u00FDT\u00FDm\u00FA\u00A7\u00F5G\fX\x06\u00B3\f$\x06\u00DB\f\u00CE\x18<\u00C55qo<\x1D/\u00C7\u00DB\u00F1QC]\u00C3@C\u00A5a\u0095a\u0097\u00E1\u0084\u0091\u00B9\u00D1<\u00A3\u00D5F\u008DF\x0F\u008Ci\u00C6\\\u00E3$\u00E3m\u00C6m\u00C6\u00A3&\x06&!&KM\u00EAM\u00EE\u009ARM\u00B9\u00A6)\u00A6;L;L\u00C7\u00CD\u00CC\u00CD\u00A2\u00CD\u00D6\u00995\u009B=1\u00D72\u00E7\u009B\u00E7\u009B\u00D7\u009B\u00DF\u00B7`ZxZ,\u00B6\u00A8\u00B6\u00B8eI\u00B2\u00E4Z\u00A6Y\u00EE\u00B6\u00BCn\u0085Z9Y\u00A5XUZ]\u00B3F\u00AD\u009D\u00AD%\u00D6\u00BB\u00AD\u00BB\u00A7\x11\u00A7\u00B9N\u0093N\u00AB\u009E\u00D6g\u00C3\u00B0\u00F1\u00B6\u00C9\u00B6\u00A9\u00B7\x19\u00B0\u00E5\u00D8\x06\u00DB\u00AE\u00B6m\u00B6}agb\x17g\u00B7\u00C5\u00AE\u00C3\u00EE\u0093\u00BD\u0093}\u00BA}\u008D\u00FD=\x07\r\u0087\u00D9\x0E\u00AB\x1DZ\x1D~s\u00B4r\x14:V:\u00DE\u009A\u00CE\u009C\u00EE?}\u00C5\u00F4\u0096\u00E9/gX\u00CF\x10\u00CF\u00D83\u00E3\u00B6\x13\u00CB)\u00C4i\u009DS\u009B\u00D3Gg\x17g\u00B9s\u0083\u00F3\u0088\u008B\u0089K\u0082\u00CB.\u0097>.\u009B\x1B\u00C6\u00DD\u00C8\u00BD\u00E4Jt\u00F5q]\u00E1z\u00D2\u00F5\u009D\u009B\u00B3\u009B\u00C2\u00ED\u00A8\u00DB\u00AF\u00EE6\u00EEi\u00EE\u0087\u00DC\u009F\u00CC4\u009F)\u009EY3s\u00D0\u00C3\u00C8C\u00E0Q\u00E5\u00D1?\x0B\u009F\u00950k\u00DF\u00AC~OCO\u0081g\u00B5\u00E7#/c/\u0091W\u00AD\u00D7\u00B0\u00B7\u00A5w\u00AA\u00F7a\u00EF\x17>\u00F6>r\u009F\u00E3>\u00E3<7\u00DE2\u00DEY_\u00CC7\u00C0\u00B7\u00C8\u00B7\u00CBO\u00C3o\u009E_\u0085\u00DFC\x7F#\u00FFd\u00FFz\u00FF\u00D1\x00\u00A7\u0080%\x01g\x03\u0089\u0081A\u0081[\x02\u00FB\u00F8z|!\u00BF\u008E?:\u00DBe\u00F6\u00B2\u00D9\u00EDA\u008C\u00A0\u00B9A\x15A\u008F\u0082\u00AD\u0082\u00E5\u00C1\u00AD!h\u00C8\u00EC\u0090\u00AD!\u00F7\u00E7\u0098\u00CE\u0091\u00CEi\x0E\u0085P~\u00E8\u00D6\u00D0\x07a\u00E6a\u008B\u00C3~\f'\u0085\u0087\u0085W\u0086?\u008Ep\u0088X\x1A\u00D11\u00975w\u00D1\u00DCCs\u00DFD\u00FAD\u0096D\u00DE\u009Bg1O9\u00AF-J5*>\u00AA.j<\u00DA7\u00BA4\u00BA?\u00C6.fY\u00CC\u00D5X\u009DXIlK\x1C9.*\u00AE6nl\u00BE\u00DF\u00FC\u00ED\u00F3\u0087\u00E2\u009D\u00E2\x0B\u00E3{\x17\u0098/\u00C8]py\u00A1\u00CE\u00C2\u00F4\u0085\u00A7\x16\u00A9.\x12,:\u0096@L\u0088N8\u0094\u00F0A\x10*\u00A8\x16\u008C%\u00F2\x13w%\u008E\ny\u00C2\x1D\u00C2g\"/\u00D16\u00D1\u0088\u00D8C\\*\x1EN\u00F2H*Mz\u0092\u00EC\u0091\u00BC5y$\u00C53\u00A5,\u00E5\u00B9\u0084'\u00A9\u0090\u00BCL\rL\u00DD\u009B:\u009E\x16\u009Av m2=:\u00BD1\u0083\u0092\u0091\u0090qB\u00AA!M\u0093\u00B6g\u00EAg\u00E6fv\u00CB\u00ACe\u0085\u00B2\u00FE\u00C5n\u008B\u00B7/\x1E\u0095\x07\u00C9k\u00B3\u0090\u00AC\x05Y-\n\u00B6B\u00A6\u00E8TZ(\u00D7*\x07\u00B2geWf\u00BF\u00CD\u0089\u00CA9\u0096\u00AB\u009E+\u00CD\u00ED\u00CC\u00B3\u00CA\u00DB\u00907\u009C\u00EF\u009F\u00FF\u00ED\x12\u00C2\x12\u00E1\u0092\u00B6\u00A5\u0086KW-\x1DX\u00E6\u00BD\u00ACj9\u00B2<qy\u00DB\n\u00E3\x15\x05+\u0086V\x06\u00AC<\u00B8\u008A\u00B6*m\u00D5O\u00AB\u00EDW\u0097\u00AE~\u00BD&zMk\u0081^\u00C1\u00CA\u0082\u00C1\u00B5\x01k\u00EB\x0BU\n\u00E5\u0085}\u00EB\u00DC\u00D7\u00ED]OX/Y\u00DF\u00B5a\u00FA\u0086\u009D\x1B>\x15\u0089\u008A\u00AE\x14\u00DB\x17\u0097\x15\x7F\u00D8(\u00DCx\u00E5\x1B\u0087o\u00CA\u00BF\u0099\u00DC\u0094\u00B4\u00A9\u00AB\u00C4\u00B9d\u00CFf\u00D2f\u00E9\u00E6\u00DE-\u009E[\x0E\u0096\u00AA\u0097\u00E6\u0097\x0En\r\u00D9\u00DA\u00B4\r\u00DFV\u00B4\u00ED\u00F5\u00F6E\u00DB/\u0097\u00CD(\u00DB\u00BB\u0083\u00B6C\u00B9\u00A3\u00BF<\u00B8\u00BCe\u00A7\u00C9\u00CE\u00CD;?T\u00A4T\u00F4T\u00FAT6\u00EE\u00D2\u00DD\u00B5a\u00D7\u00F8n\u00D1\u00EE\x1B{\u00BC\u00F64\u00EC\u00D5\u00DB[\u00BC\u00F7\u00FD>\u00C9\u00BE\u00DBU\x01UM\u00D5f\u00D5e\u00FBI\u00FB\u00B3\u00F7?\u00AE\u0089\u00AA\u00E9\u00F8\u0096\u00FBm]\u00ADNmq\u00ED\u00C7\x03\u00D2\x03\u00FD\x07#\x0E\u00B6\u00D7\u00B9\u00D4\u00D5\x1D\u00D2=TR\u008F\u00D6+\u00EBG\x0E\u00C7\x1F\u00BE\u00FE\u009D\u00EFw-\r6\rU\u008D\u009C\u00C6\u00E2#pDy\u00E4\u00E9\u00F7\t\u00DF\u00F7\x1E\r:\u00DAv\u008C{\u00AC\u00E1\x07\u00D3\x1Fv\x1Dg\x1D/jB\u009A\u00F2\u009AF\u009BS\u009A\u00FB[b[\u00BAO\u00CC>\u00D1\u00D6\u00EA\u00DEz\u00FCG\u00DB\x1F\x0F\u009C4<YyJ\u00F3T\u00C9i\u00DA\u00E9\u0082\u00D3\u0093g\u00F2\u00CF\u008C\u009D\u0095\u009D}~.\u00F9\u00DC`\u00DB\u00A2\u00B6{\u00E7c\u00CE\u00DFj\x0Fo\u00EF\u00BA\x10t\u00E1\u00D2E\u00FF\u008B\u00E7;\u00BC;\u00CE\\\u00F2\u00B8t\u00F2\u00B2\u00DB\u00E5\x13W\u00B8W\u009A\u00AF:_m\u00EAt\u00EA<\u00FE\u0093\u00D3O\u00C7\u00BB\u009C\u00BB\u009A\u00AE\u00B9\\k\u00B9\u00EEz\u00BD\u00B5{f\u00F7\u00E9\x1B\u009E7\u00CE\u00DD\u00F4\u00BDy\u00F1\x16\u00FF\u00D6\u00D5\u009E9=\u00DD\u00BD\u00F3zo\u00F7\u00C5\u00F7\u00F5\u00DF\x16\u00DD~r'\u00FD\u00CE\u00CB\u00BB\u00D9w'\u00EE\u00AD\u00BCO\u00BC_\u00F4@\u00EDA\u00D9C\u00DD\u0087\u00D5?[\u00FE\u00DC\u00D8\u00EF\u00DC\x7Fj\u00C0w\u00A0\u00F3\u00D1\u00DCG\u00F7\x06\u0085\u0083\u00CF\u00FE\u0091\u00F5\u008F\x0FC\x05\u008F\u0099\u008F\u00CB\u0086\r\u0086\u00EB\u009E8>99\u00E2?r\u00FD\u00E9\u00FC\u00A7C\u00CFd\u00CF&\u009E\x17\u00FE\u00A2\u00FE\u00CB\u00AE\x17\x16/~\u00F8\u00D5\u00EB\u00D7\u00CE\u00D1\u0098\u00D1\u00A1\u0097\u00F2\u0097\u0093\u00BFm|\u00A5\u00FD\u00EA\u00C0\u00EB\x19\u00AF\u00DB\u00C6\u00C2\u00C6\x1E\u00BE\u00C9x31^\u00F4V\u00FB\u00ED\u00C1w\u00DCw\x1D\u00EF\u00A3\u00DF\x0FO\u00E4| \x7F(\u00FFh\u00F9\u00B1\u00F5S\u00D0\u00A7\u00FB\u0093\x19\u0093\u0093\u00FF\x04\x03\u0098\u00F3\u00FCc3-\u00DB\x00\x00;\u00F5iTXtXML:com.adobe.xmp\x00\x00\x00\x00\x00<?xpacket begin=\"\u00EF\u00BB\u00BF\" id=\"W5M0MpCehiHzreSzNTczkc9d\"?>\n<x:xmpmeta xmlns:x=\"adobe:ns:meta/\" x:xmptk=\"Adobe XMP Core 5.6-c014 79.156797, 2014/08/20-09:53:02        \">\n   <rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\n      <rdf:Description rdf:about=\"\"\n            xmlns:xmp=\"http://ns.adobe.com/xap/1.0/\"\n            xmlns:xmpMM=\"http://ns.adobe.com/xap/1.0/mm/\"\n            xmlns:stEvt=\"http://ns.adobe.com/xap/1.0/sType/ResourceEvent#\"\n            xmlns:photoshop=\"http://ns.adobe.com/photoshop/1.0/\"\n            xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n            xmlns:tiff=\"http://ns.adobe.com/tiff/1.0/\"\n            xmlns:exif=\"http://ns.adobe.com/exif/1.0/\">\n         <xmp:CreatorTool>Adobe Photoshop CC 2014 (Macintosh)</xmp:CreatorTool>\n         <xmp:CreateDate>2015-09-06T18:40:39+02:00</xmp:CreateDate>\n         <xmp:MetadataDate>2015-09-07T00:37:57+02:00</xmp:MetadataDate>\n         <xmp:ModifyDate>2015-09-07T00:37:57+02:00</xmp:ModifyDate>\n         <xmpMM:InstanceID>xmp.iid:430e4e61-da5f-49e3-90fc-1d03fd7277b4</xmpMM:InstanceID>\n         <xmpMM:DocumentID>adobe:docid:photoshop:568ee9c6-9576-1178-a459-82b7df0d300c</xmpMM:DocumentID>\n         <xmpMM:OriginalDocumentID>xmp.did:fefab39b-134c-4b7f-a708-f08cdbf56079</xmpMM:OriginalDocumentID>\n         <xmpMM:History>\n            <rdf:Seq>\n               <rdf:li rdf:parseType=\"Resource\">\n                  <stEvt:action>created</stEvt:action>\n                  <stEvt:instanceID>xmp.iid:fefab39b-134c-4b7f-a708-f08cdbf56079</stEvt:instanceID>\n                  <stEvt:when>2015-09-06T18:40:39+02:00</stEvt:when>\n                  <stEvt:softwareAgent>Adobe Photoshop CC 2014 (Macintosh)</stEvt:softwareAgent>\n               </rdf:li>\n               <rdf:li rdf:parseType=\"Resource\">\n                  <stEvt:action>saved</stEvt:action>\n                  <stEvt:instanceID>xmp.iid:008d182f-cd02-40b0-8b44-ba39e78dbb1c</stEvt:instanceID>\n                  <stEvt:when>2015-09-06T18:40:39+02:00</stEvt:when>\n                  <stEvt:softwareAgent>Adobe Photoshop CC 2014 (Macintosh)</stEvt:softwareAgent>\n                  <stEvt:changed>/</stEvt:changed>\n               </rdf:li>\n               <rdf:li rdf:parseType=\"Resource\">\n                  <stEvt:action>saved</stEvt:action>\n                  <stEvt:instanceID>xmp.iid:430e4e61-da5f-49e3-90fc-1d03fd7277b4</stEvt:instanceID>\n                  <stEvt:when>2015-09-07T00:37:57+02:00</stEvt:when>\n                  <stEvt:softwareAgent>Adobe Photoshop CC 2014 (Macintosh)</stEvt:softwareAgent>\n                  <stEvt:changed>/</stEvt:changed>\n               </rdf:li>\n            </rdf:Seq>\n         </xmpMM:History>\n         <photoshop:ColorMode>3</photoshop:ColorMode>\n         <photoshop:ICCProfile>sRGB IEC61966-2.1</photoshop:ICCProfile>\n         <dc:format>image/png</dc:format>\n         <tiff:Orientation>1</tiff:Orientation>\n         <tiff:XResolution>1440000/10000</tiff:XResolution>\n         <tiff:YResolution>1440000/10000</tiff:YResolution>\n         <tiff:ResolutionUnit>2</tiff:ResolutionUnit>\n         <exif:ColorSpace>1</exif:ColorSpace>\n         <exif:PixelXDimension>180</exif:PixelXDimension>\n         <exif:PixelYDimension>24</exif:PixelYDimension>\n      </rdf:Description>\n   </rdf:RDF>\n</x:xmpmeta>\n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n                            \n<?xpacket end=\"w\"?>M\u00F2N\u00F4\x00\x00\x00 cHRM\x00\x00z%\x00\x00\u0080\u0083\x00\x00\u00F9\u00FF\x00\x00\u0080\u00E9\x00\x00u0\x00\x00\u00EA`\x00\x00:\u0098\x00\x00\x17o\u0092_\u00C5F\x00\x00\t\u00E0IDATx\u00DA\u00EC\u009B{\u0094VU\x19\u00C6\x7F3\u00CC\x00\u00CA@\f\x03\x021\u00C2X\\\u00D5\u00C4\x12\u0088K(\x17\u0091\u00B8\u00A8\u00E5\u00B2\u00D2\x1AE\u00B0\u00D4%.\x13\u0093\x12\u0094@M4\u00C8jj!\x1A\u00B5\n\u0089!\u0090\u00A0\u00B8H$\u008A\x05\u0098\u00E0\u0090\x04\u0088X$)T\u00C4T\u00DC\x1C\u00E26L\x7F\u009C\u00E7,\u00F6\u00ECo\u00EFs\u00BE3\u00DF\u008Ck`\u00CD\u00BB\u00D6Y\u00F3\u009D}n\u00FB\u00F2\u00EC\u00F7}\u00DEg\u00EF\u00C9*++\u00A3\u00C1\u00CE9\x1B\x04<\b\u009C\u00D2y.0\x05\u00D8t\u0096\u00D4\u00FF<\u00E3\u00F7\u00FF\u0092<\u0098\u00A3\u00C6f\u00C5\u00DCw\u00E2,\x1A\u00CCt\u00DAs\u00B6\u00B5)\u00A9u\x01\u0086[e\u00B3\u00EBq}\u00B3\u0080\x1B\u0081\u0081@o\u00A0\u00BBq\u00EDo\u00C0f`#\u00F0K\u00E0\u00BFq\u0080~\t\u00E8\x11\u00F3\u00C1r`\x1B\u00B0\x07x\x03\u00F8\r\u00F0\u009Fz\u00DA9k\u0080\u008B\u00D3\u00B8\u00EF_\u00EA\u00A8\u00AD\u00C0/\u0080\u00BF\u009FC\u0080\u00AEp\u0094\x1D\u00AB\u00A7u\u00BD\x13x\x00\u00E8\u00EC\u00B9~\u00B9\u008E\u00DB\u0081\x19\u00C0S\u00C0t\u00E0\u00B4\x0F\u00D0\x17\x01\u00ADc>\u00DA\u00DA\x02\u00FD!`!\u00F0=`g=\u00EB\u00A0\u00A24\u00DA\x13\u00B6\u00E9\x12\u00FD~\x04x\x18\u00F8~\x03[\u00F9\u00C0\u00EC\x02\u00A0\x14\x18\u009A\u00E0\u0099\u0096\u00C0c\u00C0g\u0080[\u0081\x1D\u00F6\r\u00D9\u00C0\u00C1\x1AT\u00E6C\u00C0\x1D\u00C0v\u00E0\u00AE:nx'5|\x1E\u00F0\x1C\u00B0\b\x18\x19q\x7FM\u00DA\u00D3L\u0093sJ\x03\u00CE>\x10+\x006$\x04\u00B3iW(\x1F\u00F8\u0098\u00CBCgb\u008D\u00C4\u00CDZ)\f\u00D4\u0085\u00B5\x02n\u00B6\u00CAv\x02/\u00D4\u00C1\u00B7\x1E\x05\u0096\x00o6`\u00AEN\u00ED\u00B7\x11\x14\u00E3\u009F\u00A2\u008D\u00C7\u0084\u00CF\u00FE@7\u008F\x13Z\u00A5k\x15Q\u0080>\n,52\u00E4\x10T}\u00816\u009EJ<\x0E\u00FC\x19X\\\x07\u008D?\u00E9(;\u009C\u00E0\u00F9\u00FD\u00C0\u00A7\u0081\u00F7\u00AD\bs\x030\u00D1\u00D1\x07\u00B7\u00A9\u00BC\u00C1\u00EA\u00C6\u00BE\x01|\u00C23N\u0093\u0085\u00A1CFyc`\u0094h\u00A1\u00ED\u0091;\x00\u00CF\x00\u00B7D\x01\u00BA\x1C(\u00F6p\u00CE\u00FE\x04rP?\u00C7\u00F59\u00C0j\u00E0H-w\u00C0{\u008E\u00B2\x7F'x\u00FE\u00B8\x12Y\u00DB\u00CADO\u00BEm\u0095w;\x07@\u0093]O\u00EB\u00D5\x02\u0098\u00EA\x19\u00E3\u00AB\u00A4h\u00D8vB\x0Ev\u0099<\u00F20\u00EBz1\u00F0d\x18Us<\u0089b\u009E\u00E5\u00D1B\x10-\u00D31\u00C3\u00E1\u00C5Z\u00CA\u00BB\u00FD\u00D0\x13\x1E>+\u00EE3@\u00B3\x0E)%\u00AB\u00A5\u00B4l\u00B6\u00EE\x1F\u00AE\u00BA\\\u00E8x\u00DFPE\u0092\u00D0\u00B6F$\u00A7\u008D\u00D4\u0091.\u00AF\u00BE\u00CA\x01\u00E8\u00C6\x11\x03r\u00A1\u00F8\u00FB0#d\x1E\x05V\x00+\u0081?9\u009Ei\x03\f\u00B6\u00EA\u00B3\u00C0\x18\u008Cb\u00A0\u009D1\u00C9J\u0081\u0097\u00D3\x00\u00C7X\x02\u00A9\u00AB\u0083\u00CE\u00FF\u00A2P>Ga;\u00A9\r6\u008E\u00E6\x16\u00B5{\x1E\u00B7\x1E\u00DCGIxh\u0095\x04\u00D2ZS\u00E1\u00E3z\u008D\u00E1.\u00D5u4\u00D55\u00E6\x10\u00B0\u00C3=`\u00C6z\u00F7\u00B5\u00AAS\u0091u\u00EDv\u00E0\u00FEL8\u00F4\u00D7\t\u00A4\u00B1QV\u00F9\r\x16\u00A0[\u00E8c\u00F7:*\x11\u00DA\x10\u00FD\u00FD\u00A62X\u0080Bu\u008C\u00CF\u008A\u00AD(\u00F2\u0084\u00C2\u0095\u00AF#|\x14\u00E5&\x0F\u00E5r\u00D9c\u00C0=\u009A\u00B8\u00B6\u00F5\x03\u00BE%\u00EA5\u00C5!;-t\u00F0\u00C4qf\u00A8\u0094\u00F5T\x7F=\x02L\u008BPqJ\x1DQ\u00B2\u00A7@s\u00938h\u00A5&O\u009C\u00F5\u0090\x146\u00C2q\u00AD'\u00F0\x05\u00D1\u0084\u00DB\u0080\u00D7\u00AD\u00EB\u00D3\u00AC\u00E7\u008E\x01[\u0094\u00BC\u00F7\u00B7\u00A2;\x04\x0B>\u00AE\u00C8\u009E\u00AERv\\8y\u00CE\u00E1\u00E02N\n\x1F\u0096\u00B7\u00CA\u00B2:\u00A0\u00B9A;\u00EE\x00f&H\u00C8\u00CA\u00C5\u0089N\tX\u00E7\u00A7\u00F9\u00EC\u00E1\x18\x05\u00E3s\x16P\u00CF\u0097\u00F4\u00F3E\u00C7\u00FD[\x1CeKu\x7F\u0094e\u00A9Or\u0080I\u00D6 \u009Bv\x00x\x16\u00E8\x1A\u00F1\u00AE\u00A9\u00C0+:\u00EC(\u00B86\u00C29\u0084\x0Eb\u0088\x00\x1Dg\x03\x14\x1D\u009B\u00C4\u00DCw1\u00B0N\u0093sg\x04\u00F5\u00DB\u00A3\u00E8\u00D3\u00DBQ\x1E\u00E2\u00C3\u00B6\u009F&\u00C4\u00DD\u00AF\b\x16WZ\x19e\u00DD\td\u00C0\u00FD\u0099p\u00AD\u00ED\u00C0nG\u0087w4\u00CE\x7F\u00AEp\x1C\u00DA<%h\u0083\u0080\t\x0E \u0086\x1E\u00FAP\x020\u00E3\bc\u00B6J\u00B2H\u00F5\b\u008FE\x1E0\u009Frt\u00F0w,0W\u00CA\x13\x0FR\u0084Zg\u00DD\u00FF \u00D0+\u00A2>\u00F91`\x0Em\u0082\u00A3\u00EC\u00E9\x180\u00DBT+\u00CA\u00DA\u0088>\u009A`~C\u008A\u00D2 Eas26\x01~\x14\u00F3\u00CE.\x0E0\u0087Ix\u00AEA\u00ADLG\u00B4+!\u00EE\u008E8\u009EiL \u00EFf\u00E4\u00A1O\x01\u00FB\u0080\u008FX^*\u00D78\u00DF\x07\\\u00A7Y\u00B5J\u00DE7\u00B4\u00DF\x01\u00EB\u0081W\u008DgZ\x03W+d\x0E\u00D5\u00A0\x149:r\u008Ex\x1D\x06\x7F\u00AC\r\u00FB\u00B2\u00E1M\u00C2p\u00FC5\u00E3\u00BCJ\u00E0^a\u00F1\u00F0?\u00CA{\u00856Y\u00F4+\u00CA\u00D6\x10h\u00DF'E=l\u00FAq\u0085\u0092\u00BBpE\u00EC\x12R\u00E5K$3\u00CE\x15\u00C7-\x04\u00C6\u00EB\u00D9t\"\u00A2\u00E9\u00E56\x12,=\u009F4\u00C6\u00E7\u00AFR\x1D\u00C2(<P\x1C{m\u00CC\u00BB7\x13\u00C8\u00B9\u00EF\u00A9\ry:\u009AY\u00F7UxT\u00AC8sm[\u00C8\u00CD\x14\u00D0\u00A4\u00E9E\u00AB\u0094\x1C\u00E0Q\x1A~-\u00EEg\x0E\u00E4\x1A#1\u00CAw\x00\u00FA5\u00E0\u00C5Z\u00CC\u00BE\u00B7*:\u00D8\u00B2\u00E3}\u00D6\u00F92\x0B\u00CCa\u00FBB\u00FD\x1A\u0083+\u00B6\u0088\u00A0B;\u00ACl\u00FDE\u00A9+}\u008C\u00B2\u00F6\u00F2h\u00FF\u00D0\u00F9-\u008E\u00F7|\u00D7\u009Ap\b\u00DC/K5\u00F0\u00D9\x05J*M\u00BB\u00C7\x01\u00AE%\u00F2\u00DA\u00A6\u00CCvm\f\u00A0\u00D7\x1Ay\u0091-6\u00D8\u0089e[E\u00F5\u00A3\t\u00C7\u00CB%\x1F\x1F\u00C8\x14\u00D0\u00AD\x1C\u00E1\u00AF2|\u00B1\u00C3z\u0089Cu\x04.3\u00CA/\u008D\u00A9l\x07\u00CF\u00B7\u00D3\u00B5\u0093\x02\u00ECi\u00E9\u0098M\u00AD\u00EB\u00E3\x15\u00CA]\u00D6\u00D7\u00C1%\u0097\u0090\u00BA\u00F9\u00A9\u00AD\u0083Vt\u0096\u00E7v\u00D9b\u008F\u00E2\u00D2\u00C7\u0092\u00DE\n\f@\u00DBI\u00E0^\x07\u0098Q;\u00EF\u0097\u00B3\u00F0m\u00D2\u00EA\u00E7\u00E0\u00CD\u00D3I\u00DD\x03R)\u00AFo\u00F7A\u0094M\u008B\u0088\u00E8{\u00AD\u00F7ek\u00E2-H0\u009E=DmL+W4\u00C9\b\u00D07:2\u00FEw\u00AC\u0090\rp\u00B7\u00BCA\u00AF4\u00DF\u00DB\u00B4\u0096\u00B5\u00CF\u00FD\u00C6\u00B7\u00BF$^oKO.@\u00E7\tP6G\u00EC\u0092`\u00C2\u00FB\u00CC%\u00AB\x1D\u008Ay_;Gt\u00F3\u00D96\u0085\u00FBN\u009E\u00EB\x1Fv\u0094\rK\u00B3]-c\u00A8\u00C0\u00EE\u0088\u00EBo9\u009C\u00C4\u00C4\u0084\u0080\u009EH\u00AA\u00CE\u00BE!\u00A4!5M\n;\u00E0^\u00EA^N\u00F5]P\u00B3\u0081Y\x0E0\u00EFR\u00D8\u00DD\u00E1\u00F0\u00E8\u00A7\u00D3\u00A41\u00E9Z\u0096A\u008D\u00E6\u00ABSM\x1B\x03|\u00DE\u00F1\\6\u0099-P4I\u00C8\x01\u00B3b\u00DA\u0099\u00E3\u0088<DH\u0095'2H\x18\u0093L,\u009B\x13G\u00ED\u00EAsI\u00B1\x1FW\u0092\u009D\u00AE\x13\x1D\u00EB(/\u0089\u0092\u00EDN\u0093\u00BA\u00A8b\u00DA5\u0092\u009D\n\x1C\u00D7~b\u00FC\x1EA\u00EA\u00C6\u00A5R%\u0086\u00EB,\x1E8!a\u00A7&M$\u00CCv>d\u00F1]\bv\u00D9-\u00B78\u00DE\x11y\u00CD\u00F6V\u00E2\u00F4\u0094#w8\u00A1\u0089Y`|ksD}\u00B2\u00D3\x04\u00B4\u009D\u00DD\u009BvY\u00C4\u00BD\u009Db\u00D4\u0090rO\u0092\u00F8\u008E\u0087\u009BV\x19\x11g\x7F\u008C\u00F3\u0088r\x02+\u0095\u00C0\u00DBQn\u00B216>\x1Bg\u00E1\u00CB\u00E4\u00F9\u00AFD\x01:W\x19u\u0085\u00E5\u0091{Ky\x18\u00ED\u00F9\u00E0L\u00AAo\u00E7\u00B3\u0097\u00CF_U\u00C8w%(I\u00ADu\x06\x1Ef\u00A9\u0080\u00F9I+\x01{\u0094\u00EA\u00AB\u009FU\u0092&\u00BB[\u00DC\u00F8y\u00CF{\x1BS\u00B7\u00FF4\u00F0&\u00D5u\u00DCn\u00A2sO{\u00C0\u0099\x1B\u00F1\u00AEM\x1E\u0090\u00CF\u00A5\u00EE\u00ED>\x01\x1B\x07\u00A8G\x12\u00ECM_\u00AED1W\t\u00E6\u00CD\u009E$w1\u00C1\x1AC\u00A4\u00A7h\u00C7\x19\u008D9<\u00D6Kb\x1A\x1D\u0091\u00D9N\u008A\x01\u009D\u00CB+t\u008FP@\u00A2\u00C2\u00E3WT\u0097B\u00E0\u00A3\u009E\u00C41\u00CA&9\u00CA\x1E U\x1F.\u00B1\u00CE\u00BBJ\u0095\u00B1=\u00F4\u00E3\n\u00B5O\u00D4!\x10\u0096:\u00CAf\x11\u00ACPvV_\u00F4U\x14,\u008Ey\u00D7n\u0081\u00C6\u00B4\x1F\u0090\u00BAr\u00DA\x03xW\u0089\u00E9\u00C0Zj\u00C7\x0B\u00F8\u00FF{\u00E6r\u00CE\u00EC\u00CB\u00D8M\u00B0\u00E1\u00ED\x19\x0F\u0098\u00E7*\u00B2\u00E7\u00AB\u00ED\u0085@\u00FB\u00DA\u00D8\u00C4\u00B2\u0092`\u00B1\u00C4^\u0099\u00B2\u0093\u00C3\x11\x02R;\x1Dw\u00C9k\u00E7\u00C5\u00BC\u00FF\u00A0g\u00D2-\u00D77vyx\x151\u00D2\u00D2\x06G\u00B9\u00BD\u00A8\u00B2^\x006\u00ED:ux\u0089\u008E-\u00F2.Y\x04\u008B*\x1Bc\u00E8@&\u0080v-\x11?\u00A40\u00BE\x07\u00F8\x03n\u00AD\u00DA\u0097\\\u00D9ta\u0081\u00C6\u00B3\x04\u00F8\x19\u00C1\u00DE\u0094\u008E\u008A`\u00BF\u00D7\u00E4\u00C9\u00A9\u0085\u00B6\u00DCM\u00F2\x15B\u00DB\x06\x03o\x13\u00AC\x1A\u00EE\u00D1\u00B1)\x13@\x1FT\u00F8\x18\u00ED\t\u00B5?v\u0084\u00E4\u00E9\u0092n\u00F6j\u0096\u00E6S}\u009B\u00AA\u00CB\u00DE%^\u00C8\u00AF\u00AAA\u00FD]\u00BC\u00BD?\u00A9+\u0088\u00C5\u0092\u00FDL+\"\u00D8\u009Fr/\u00A9\u00CB\u00B9}\u00D2\u0098\u00A45\u00B1J;\u00BC\u00C6\u00D8\u0081\u0098\u00EBo{<\u00F9H\u00B5k\u008C\u0083\u00B6\u00F4\u00A3\u00F6v\u00F2\u008D\x13~\u008E\u00D7\u00F0\u00F9\u008E\u008EHy^6\u00FE\u008D\u00D6\u00BE\u00EC|\x13\u00C1f\u0095\u00AE\u008E\u0090l\u00DAk\u00B8\u00B7\n62h\u00C4,\u0087\x07l\u00EF\u00A1\x18Q\u00FF\u00F3\u00D7\u00C2\u00F8\u00DD\u00D9!Q\u00B9\x06\u00E1u\u0082\u00FF\u008D\u00B4m>\u00D5\u00F7\u00DD\u00BE\x0F|*\u0082;\u00DBm\u00BET\u0091'4\u00D7\u00E2S~\u009Ay\u0081-an\x07\u00AE\u008C\u0091\u00C6\u00F6\x12\u00ACf\u00DA\u0093<\u00CF\u00D3\u00D6Q\u00A4\u00B7\u00D2:S9\u0094\u00E9\u00BC\n\x1D\u0092^\x12\x0F^\u00A2\\\u00E0I\x02\x1D\u00B9*\u00C3IR\u0090UVVvg\x1A\u0089Y\u00B88\u00B1\u00CDA%\u00D2\t\r\u00B7\u008A\u00964\u0093\u00A7Y+\tg\u00BE\u00BC\u00E2P+aY\u00EDI\x1E\u00BFJ\u00B0\u00D5\u00B0\u00AB\u0095,M%\u00D8:\t\u00C1\u0086\u00A8\u00B6\u0096:0\u00DB\u00E3\t\u008AH]\u0081\u00CB#X\r\\\u00E7\u00B8\x7F\x00\u00C1\u0092\u00F6\x10qw\u00A4\u0084\u00BCD\u00B00\u00B2\u00D0\u00E3I\u00C6Xe+H\u00DD\u00A3\u00DD\u0097T-\u00F8Y\u008F\u00AA\u00D0\\a\u00FB\x1A\u00CE\u00EC\u009D\u00D8'Z2\u0083`[\u00EEx\u00AAk\u00E1\u00A5\x02\u008DO\x05\x1A\u00ABv]\u00C9\u0099\u00ED\u00A3o\x11,\u0081\u00CF\u00D3\u00D8\u00DBv\u00BDE\u00AF\u008E)I\u00AD\u00A8\x01\x18\u00B3\u00A4~\u00F4\u00B4\x12\u00F1$v\u00F8\u00FF\x03\x00$\u00F3+xC#\x1D\f\x00\x00\x00\x00IEND\u00AEB`\u0082"]			logoName = 'datrenderq_templogo.png'			var logoPath;			if (os[0] == 'MacOS'){				// LOG: mac				logoPath = new File('~/Desktop')			}else{				// LOG: windows				logoPath = new File ('~/Desktop')			}			logoFile = new File(logoPath.fsName+'/'+logoName)			logoFile.encoding = "BINARY";			logoFile.open("w");			logoFile.write(logoBinary)			var logo = header.add("image", undefined, logoFile);				logo.alignment = ['right','top'];				logo.titleLayout.margins = [0, 0, 0, 0];		////////////////////////////////////////////////////////////////////////////////////			var versionDisp = header.add('StaticText')				versionDisp.text = 'v'+scriptV.toString();				versionDisp.alignment = ['right','bottom'];		//////			// ADD ? BUTTON			var helpB = header.add("button",{x:0,y:0,width:25,height:25},'?');				helpB.alignment = ['right','top'];			//open a new window when user clicks on "help" button				helpB.onClick = function(){buildAbout()}				//////////////////////////////////////////				//                                      //				//                ######                //				//                    ##                //				//                    ##                //				//                 #####                // - window				//                 ##                   //				//                                      //				//                 ##                   //				//                                      //				//////////////////////////////////////////				function buildAbout(){					//make a window					var hWin = new Window("palette", "DatRenderQ - about", undefined,{borderless:true}, {resizable:false})					//CONTENTS:					var res =						"group {orientation:'column',alignChildren:['center','top'],spacing:3,\							header:Group{ orientation:'row', alignChildren:['center','top'],spacing:5,\								head: StaticText{text:'heading'}\								subHead: StaticText{text:'subHead'}\							}\							copyR: StaticText{text:'by Fynn Laue 2015'}\							tabs: Panel{type:'tabbedpanel',preferredSize:[310,160] \								tab1: Panel{type:'tab',text:'Info',alignChildren:['center','top'],\									info: StaticText{text:'',properties:{multiline:true}}\								},\								tab2: Panel{type:'tab',text:'LOG',alignChildren:['center','top'],\									log: EditText{text:'',alignment:['center','top'],characters:30,properties:{multiline:true}}\								},\							}, \							closeBtn: Button{text:'close'}\						}"					hWing = hWin.add(res);										//					function options(gui){						//--HEADING--						var heading = gui.header.head							heading.text = 'DatRenderQ';							heading.font = ScriptUI.newFont("Arial","REGULAR",9);						var subHead = gui.header.subHead							subHead.text = 'v'+scriptV;						//--Tab1 Contents (info)--						//SIZES:						var wSize = [0,0,310,160];						var tab1 = gui.tabs.tab1						var info = tab1.info							info.bounds = wSize							info.alignment = ['left','top']							info.text ="""How to use:  - Create some markers on the timeline.  - Select the comp in the project panel.  - Set path, output module and other options.  - Hit 'Run!' """						//--Tab2 Contents (LOG)--						getProjectInfo();						getPrefs();						faxLog(logFile);						var datLog = gui.tabs.tab2.log							datLog.bounds = wSize							datLog.text = faxLog(logFile)						//--FOOTER--						closeBtn = gui.closeBtn;							closeBtn.onClick = function(){gui.parent.close()}					}					options(hWing); //call with window and resource string as input					function showUI(gui){ //load GUI (window with added res string) and show it						if (gui !=null && gui instanceof Window){							gui.show();							gui.center();						}else{							alert('something went wrong...\rIf You see this error, tell Fynn that the about menu isn\'t working.')						}					}					showUI(hWin);				}		myPanel.grp = myPanel.add(res); //draw the rest of the panel		logoFile.remove(); //delete the temporary image file		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////		//                                                                                                                        //		//      #######  ##   ##  ##   ##  #######  ########  ##  #######  ##   ##  #######  ##       ##  ########  ##    ##      //		//      ##       ##   ##  ###  ##  ##   ##     ##     ##  ##   ##  ###  ##  ##   ##  ##       ##     ##      ##  ##       //		//      ##       ##   ##  #### ##  ##          ##     ##  ##   ##  #### ##  ##   ##  ##       ##     ##        ##         //		//      #####    ##   ##  ## ####  ##          ##     ##  ##   ##  ## ####  #######  ##       ##     ##        ##         //		//      ##       ##   ##  ##  ###  ##          ##     ##  ##   ##  ##  ###  ##   ##  ##       ##     ##        ##         //		//      ##       ##   ##  ##   ##  ##   ##     ##     ##  ##   ##  ##   ##  ##   ##  ##       ##     ##        ##         //		//      ##       #######  ##   ##  #######     ##     ##  #######  ##   ##  ##   ##  #######  ##     ##        ##         //		//                                                                                                                        //		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////		/////////////////////////////////////////////////////////////////////////////////////////////////		//		//	DEFAULTS and Functionality		//	Define default stuff for elements, window position and actions for buttons.		//	Input for this should be the variable that contains the panel with the res(resource string).		//	The functionality ofall elements is defined here as well.		//		/////////////////////////////////////////////////////////////////////////////////////////////////		function renderSettings(builder){ //what to render			var stillFrame = builder.rndrStngsPnl.stillFrm;				stillFrame.helpTip = 'Only render each marker’s first frame'			stillFrame.onClick = function(){renderSingleFrame=stillFrame.value;}		}		renderSettings(myPanel.grp);		////////////////////////////////////////////////////////////////////////////////////////////////		//		//	RENDER LOCATION		//		- render destination		//		////////////////////////////////////////////////////////////////////////////////////////////////		function outputPanel(builder){ //render location settings. Needs panel containing res string as input			with (builder.outputPnl){				var useDefault = defOut.defOutBtn;				var useCustom = cstmOut.cstmOutBtn;				var setCustom = cstmOut.setCstmOut;				var customPath = cstmPth;				var renderLoc;				getProjectInfo();				//this part need better organizing. don't repeat yourself!				if(projectFile==false){					useDefault.onDraw = useDefault.value=false;					useCustom.onDraw = useCustom.value=true;					useDefault.onClick = function(){						getProjectInfo();						if(projectFile==false){							alert("Can't use default! \nSave the Project first. Default render folder will be created next to this project's saved location.")							useDefault.value = false;						}else{							useDefault.value = true;							useCustom.value = false;							customPath.text = setDefaultOutput(); //function returns path name and puts it in the text field						}					}				}else{					useDefault.onDraw = useDefault.value=true;					customPath.onDraw = customPath.text = setDefaultOutput(); //function returns path name and puts it in the text field					useDefault.onClick = function(){						if(projectFile==false){							alert("Can't use default! \nSave the Project first. Default render folder will be created next to this project's saved location.")							useDefault.value = false;						}else{							useDefault.value = true;							useCustom.value = false;							customPath.text = setDefaultOutput(); //function returns path name and puts it in the text field						}					}				}				//...this part need better sorting. don't repeat yourself!				useCustom.onClick = function(){					customPath.text = renderLoc==undefined?'choose a location':renderLoc;					useDefault.value = false;}				setCustom.onClick = function(){					//paste function for choosing new file path					useCustom.value = true;					useDefault.value = false;					var set = setCustomOutput();					renderLoc=set==false?'choose a location':set;					customPath.text = renderLoc;				}				customPath.onChange = function(){					renderLoc = customPath.text;				}			}		}		outputPanel(myPanel.grp);		////////////////////////////////////////////////////////////////////////////////////////////////		//		//	OUTPUT MODULE		//		- create dropdown menu containing output module templates		//		////////////////////////////////////////////////////////////////////////////////////////////////		function outputModule(builder){			with(builder){				var menu = outputModPnl.outputModMenu;					menu.add('item','choose a template');				var del = false;				var newComp;				if(renderQ.numItems<1){ //Create a render queue item, if render queue is empty, for the script to be able to list the OutputModule templates					var newComp = app.project.items.addComp('xxxx_newComp',10,10,1,10,25);					renderQ.items.add(newComp);					del=true;				}				var OMtemplates = renderQ.item(1).outputModule(1).templates;				function listTemplates(){					for(i=0;i<OMtemplates.length;i++){						var curTemplate = OMtemplates[i];						var srch = curTemplate.search('_HIDDEN');	//check if the template is hidden to the UI...						if(!(srch>-1)){								//...if it is not hidden, add it to the list							menu.add('item',curTemplate);						}					}				}				listTemplates();				if(del==true){renderQ.item(renderQ.numItems).remove();}				if(newComp!=null){newComp.remove();}				menu.selection = menu.items[0];				menu.onChange = function(){outputModuleT = menu.selection}; //send outputmodule name to global variable (for index type 'selection.index'				}		}		outputModule(myPanel.grp);		////////////////////////////////////////////////////////////////////////////////////////////////		//		//	FILE NAME		//		- create dropdown menu containing output module templates		//		////////////////////////////////////////////////////////////////////////////////////////////////		function fileNom(builder){			with(builder){				var useMrkNom = fileNomPnl.useMrkNom					useMrkNom.helpTip = "Use the marker comments to name each render items.\rIf a marker's comment is empty, the comp's name is used."				var useCompNom = fileNomPnl.useCompNom					useCompNom.helpTip = "Use the selected comps' name and a counter to name each render item"				var addFrmNo = fileNomPnl.addFrmNo					addFrmNo.helpTip =  'Creates a new folder at the render destination for each render item'			}		}		fileNom(myPanel.grp);		////////////////////////////////////////////////////////////////////////////////////////////////		//		//	FOOTER		//		- double check everything and assign file name values etc.		//		- run the script		//		////////////////////////////////////////////////////////////////////////////////////////////////		function footer(builder){ //run button functionality			builder.footer.okBtn.onClick = function(){				if(getPrefs()==1){					var thisComp = app.project.activeItem;					var renderLoc = builder.outputPnl.cstmPth.text;					var OMmenuText = builder.outputModPnl.outputModMenu.selection.toString();					if(getProjectInfo()==false && builder.outputPnl.defOut.defOutBtn.value==true){ //Changes to 'use Custom path', when user changes to non-saved project and has 'use default' selected						builder.outputPnl.defOut.defOutBtn.value = false;						builder.outputPnl.cstmOut.cstmOutBtn.value = true;						builder.outputPnl.cstmPth.text = 'choose a location';					};					renderMarkers.length = 0; //Clears the renderMarkers array to fix the -12 out of range 0.00044 to 234234234 error (among others)					if(!(thisComp instanceof CompItem)){						alert('please select a composition first');					}else if(renderLoc==''||renderLoc=='choose a location'){						alert('Please set a valid output path before running.')					}else if(OMmenuText=='choose a template'){						alert('select an output module first');					}else{						app.beginUndoGroup('markers to render queue')						var append = builder.fileNomPnl.addFrmNo.value;						pseudoTimeline(3); //make temp marker layer						housekeeping(); //read marker layer						if(builder.fileNomPnl.useCompNom.value==true){							addRenderItems(renderMarkers,append,renderLoc,thisComp.name)						}else{							addRenderItems(renderMarkers,append,renderLoc,); //input the marker's array as the first property(name)						}						while(!(thisComp.numLayers<1)){ //delete temp text layer. if not possible: Don't crash. Thaaanks, honey.							if(thisComp.layer(1).name=="#MARKER_INFO"){								try{									thisComp.layer(1).remove();								}catch(err){									//do nothing								}							}							else{								break;							}						}						app.endUndoGroup();					}				}else{					alert('For the script to work properly you need to allow it to write files:\nPreferences>General>Allow Scripts To Write Files and Access Network');				}			}		}		footer(myPanel.grp);		myPanel.layout.layout(true);		return myPanel;//contains all UI 'graphics' and control-functionality	}	//-----CREATE WINDOW-----//	var myScriptPal = build_ui(thisObj);	function runBuilder(builder){ //makes the UI/window visible on screen		if(builder !=null && builder instanceof Window){		builder.center();		builder.show();		renderMarkers.length = 0; //Clears the renderMarkers array to fix the -12 out of range 0.00044 to 234234234 error (among others)		duration = 0; //Clear the duration variable to avoid using previous values in the next script-run.		}		return builder	}	try{		runBuilder(thisObj);	}catch(err){		var error = 'Line '+$.line.toString()+' : '+err.toString()		logFile.push(error)		logWindow()	}} //end of 'userInterface' functionfunction init(script){	try{		userInterface(script);	}catch(err){		var error = 'Line '+$.line.toString()+' : '+err.toString()		logFile.push(error)		logWindow()	}}init(this);}