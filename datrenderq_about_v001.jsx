{//help menu//////// ADD HELP MENUfunction buildUI(){	//make a window	var hWin = new Window("palette", "DatRenderQ - about", undefined, {resizable:true})	//CONTENTS:	var res =		"group {orientation:'column',alignChildren:['center','top'],spacing:3,\			header:Group{ orientation:'row', minimumSize:[100,10], alignChildren:['center','top'],spacing:5,\						head: StaticText{text:'heading'}\						subHead: StaticText{text:'subHead'}\			}\			tabs: Panel{type:'tabbedpanel', \				tab1: Panel{type:'tab',text:'Info',\				},\				tab2: Panel{type:'tab',text:'LOG',\					log: EditText{text:'LOG',justify:'left',bounds:[0,0,'300',100],multiline:'true',}\				},\			}, \			closeBtn: Button{text:'Close',name:'closeBtn'}\		}"	var res2 = 		"group{orientation:'column',minimumSize:[100,10],alignChildren:['center','top'],\		txt: StaticText{text:'WUUUUUUT'},\		btn: Button{text:'Imma be a button mothafukin button muthafuka!!'}\		txt: StaticText{text:'loooool'},\		}"	hWing = hWin.add(res);	//define functionality here. Takes window and resource string as input.	function options(win,gui){		//--HEADING--		var heading = gui.header.head			heading.text = 'DatRenderQ';		var subHead = gui.header.subHead			subHead.text = 'v0.4'		//--Tab1 Contents (info)--		var tab1 = gui.tabs.tab1		var info = tab1.add('statictext')			info.alignment = ['Left','top']			info.text = "asdfasdfasdf"		//--Tab2 Contents (LOG)--		var logField = gui.tabs.tab2.log		//--FOOTER--		closeBtn = gui.closeBtn;			closeBtn.onClick = function(){win.close()}	}	options(hWin,hWing); //call with window and resource string as input	function showUI(gui){		if (gui !=null && gui instanceof Window){			gui.show();			gui.center();		}else{			alert('something went wrong...\rIf You see this error, tell Fynn that the about menu isn\'t working.')		}	}	showUI(hWin); //load GUI (window with added res string) and show it}buildUI()}